% This code belongs to the HDM05 mocap database which can be obtained
% from the website http://www.mpi-inf.mpg.de/resources/HDM05 .
%
% If you use and publish results based on this code and data, please
% cite the following technical report:
%
%   @techreport{MuellerRCEKW07_HDM05-Docu,
%     author = {Meinard M{\"u}ller and Tido R{\"o}der and Michael Clausen and Bernd Eberhardt and Bj{\"o}rn Kr{\"u}ger and Andreas Weber},
%     title = {Documentation: Mocap Database {HDM05}},
%     institution = {Universit{\"a}t Bonn},
%     number = {CG-2007-2},
%     year = {2007}
%   }
%
%
% THIS CODE AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
% KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
% IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
% PARTICULAR PURPOSE.

function s = emptyVarsGlobalAnimStruct
                   s = struct('animation_done',true,...
                              'range',[],...
                              'skel',[],...
                              'mot',[],...
                              'graphics_data',[],...      % struct array with handles to graphics data (planes, lines, etc.)
                              'graphics_data_index',0,... % index into graphics_data struct array, denoting the currently active figure
                              'frame_draw_time',0,...
                              'frames_drawn',0,...
                              'draw_labels',[],...        % boolean array the same size as skel and mot, indicating whether frame counter labels are to be drawn
                              'figure_position',[],...
                              'figure_color',[192 192 192]/255,...
                              'figure_camera_file',[],...
                              'ground_tile_size_factor',1,... % measures size of ground tiles in multiples of humerus lengths
                              'bounding_box_border_extension',1,... % how many tiles are to be appended around the ground plane?
                              'animated_skeleton_Color','black',...
                              'animated_skeleton_LineWidth',6,...
                              'animated_skeleton_LineStyle','-',...
                              'animated_skeleton_Marker','.',...
                              'animated_skeleton_MarkerSize',36,...
                              'animated_skeleton_MarkerEdgeColor','red',...
                              'animated_skeleton_MarkerFaceColor','red',...
                              'trace_pose_Color','black',...
                              'trace_pose_LineWidth',2,...
                              'trace_pose_LineStyle','-',...
                              'trace_pose_Marker','.',...
                              'trace_pose_MarkerSize',12,...
                              'trace_pose_MarkerEdgeColor',[200 200 200]/255,...
                              'trace_pose_MarkerFaceColor',[200 200 200]/255,...
                              'animated_point_MarkerSize',20,...
                              'animated_point_Marker','o',...
                              'animated_point_MarkerEdgeColor',[0 0 0],... % put RGB row vector here. MarkerFaceColor is user-determined... put empty value if MarkerEdgeColor==MarkerFaceColor is desired
                              'video_compression','HFYU',...
                              'video_flip_vert',false,...
                              'video_flip_horz',false);

s.animated_skeleton_Color = 'black';
s.animated_skeleton_LineWidth = 5;
s.animated_skeleton_LineStyle= '-';
s.animated_skeleton_Marker= '.';
s.animated_skeleton_MarkerSize= 15;
s.animated_skeleton_MarkerEdgeColor= [0.4 0.4 0.4];
s.animated_skeleton_MarkerFaceColor= [0.4 0.4 0.4];